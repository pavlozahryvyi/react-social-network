{"version":3,"file":"static/js/995.8d8c0a00.chunk.js","mappings":"gKACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAgH,+BCAhH,EAA0B,yB,SCW1B,EARuC,SAAHA,GAAmB,IAAdC,EAAOD,EAAPC,QACrC,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,UAC3BH,EAAAA,EAAAA,KAAA,OAAAG,SAAMJ,KAGlB,E,UCTA,EAA6D,2BCe7D,EAXyC,SAAHD,GAAoB,IAAfM,EAAEN,EAAFM,GAAIC,EAAIP,EAAJO,KAErCC,EAAI,YAAAC,OAAeH,GAEzB,OACIJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC1BH,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CAACC,GAAIH,EAAKH,SAAEE,KAGhC,ECbA,EAAwC,0CAAxC,EAAkG,kCAAlG,EAA+I,6B,uCC8BzIK,GAAsBC,EAAAA,EAAAA,GAAwB,CAACC,KAxBjC,cAwBQD,EApB6D,SAAHb,GAAwB,IAAnBe,EAAYf,EAAZe,aACvF,OACIC,EAAAA,EAAAA,MAAA,QAAMC,SAAUF,EAAcZ,UAAWC,EAA6BC,SAAA,EAClEH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,UACjCH,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACFC,UAAWC,EAAAA,EACXb,KAAM,aACNc,KAAM,OACNC,YAAa,cACbC,SAAUC,EAAAA,OAElBtB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC5BH,EAAAA,EAAAA,KAAA,UAAAG,UACIH,EAAAA,EAAAA,KAAA,OAAKuB,I,6zEAAcC,IAAK,kBAK5C,IAuBA,EAV6C,SAAHC,GAAsB,IAAjBC,EAAUD,EAAVC,WAO3C,OAAO1B,EAAAA,EAAAA,KAACU,EAAmB,CAACK,SALX,SAACY,GACdC,QAAQC,IAAIF,EAASG,MACrBJ,EAAWC,EAASG,KACxB,GAGJ,ECRA,EA9B4C,SAAHhC,GAGW,IAFHiC,EAAWjC,EAAXiC,YACAL,EAAU5B,EAAV4B,WAGtCM,EAA4BD,EAA5BC,WAAYC,EAAgBF,EAAhBE,aAGbC,EAAkBF,EAAWG,KAAI,SAAAC,GAAM,OAAIpC,EAAAA,EAAAA,KAACqC,EAAU,CAAiBhC,KAAM+B,EAAO/B,KAAMD,GAAIgC,EAAOhC,IAAzCgC,EAAOhC,GAAuC,IAE1GkC,EAAmBL,EAAaE,KAAI,SAAAI,GAAW,OAAIvC,EAAAA,EAAAA,KAACwC,EAAO,CACCzC,QAASwC,EAAYxC,SADhBwC,EAAYnC,GACc,IAEjG,OACIU,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAAeC,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAoBC,SAE/B+B,KAGLpB,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAAqBC,SAAA,CAEhCmC,GAEDtC,EAAAA,EAAAA,KAACyC,EAAU,CAACf,WAAYA,SAIxC,E,oBCnBA,GALyBgB,E,QAAAA,IACrBC,EAAAA,GACAC,EAAAA,EAAAA,KAToB,SAACC,GACrB,MAAO,CACHd,YAAac,EAAMd,YACnBe,OAAQD,EAAME,KAAKD,OAE3B,GAI6B,CAACpB,WAAYsB,EAAAA,EAAAA,aAFjBN,CAGvBO,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.tsx","webpack://my-app/./src/components/Dialogs/NewMessage/NewMessage.module.css?5d76","components/Dialogs/NewMessage/NewMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsBlock\":\"Dialogs_dialogsBlock__qBg+B\",\"messagesBlock\":\"Dialogs_messagesBlock__IpKzJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__rjHQQ\"};","import React from \"react\";\nimport styles from './Message.module.css';\nimport {MessageType} from \"../../../types/types\";\n\nconst Message: React.FC<MessageType> = ({message}) => {\n    return (\n        <div className={styles.message}>\n            <div>{message}</div>\n        </div>\n    )\n};\n\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"DialogItem_active__wvgh9\",\"dialog\":\"DialogItem_dialog__gU34-\"};","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport styles from './DialogItem.module.css';\nimport {DialogType} from \"../../../types/types\";\n\nconst DialogItem: React.FC<DialogType> = ({id, name}) => {\n\n    const path = `/dialogs/${id}`;\n\n    return (\n        <div className={styles.dialog}>\n            <NavLink to={path}>{name}</NavLink>\n        </div>\n    )\n};\n\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"createNewMessageBlock\":\"NewMessage_createNewMessageBlock__yBNou\",\"textareaBlock\":\"NewMessage_textareaBlock__QZoZS\",\"btnBlock\":\"NewMessage_btnBlock__5xoHr\"};","import React, {Component} from \"react\";\nimport styles from './NewMessage.module.css';\nimport sendImg from \"./../../../img/paper-plane-1.png\"\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {requiredField} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst NEW_MESSAGE = \"newMessage\";\n\ntype PropTypes = {}\n\nconst NewMessageForm: React.FC<InjectedFormProps<FormDataType, PropTypes> & PropTypes> = ({handleSubmit}) => {\n    return (\n        <form onSubmit={handleSubmit} className={styles.createNewMessageBlock}>\n            <div className={styles.textareaBlock}>\n                <Field\n                    component={Textarea}\n                    name={\"newMessage\"}\n                    type={\"text\"}\n                    placeholder={\"New message\"}\n                    validate={requiredField}/>\n            </div>\n            <div className={styles.btnBlock}>\n                <button>\n                    <img src={sendImg} alt={'sendIMG'}/>\n                </button>\n            </div>\n        </form>\n    )\n};\n\nconst NewMessageReduxForm = reduxForm<FormDataType>({form: NEW_MESSAGE})(NewMessageForm);\n\ntype FormDataType = {\n    text: string\n}\ntype FormDataTypeKeys = Extract<keyof FormDataType, string>;\n\ntype NewMessageType = {\n    addMessage: (data: string) => void\n}\n\nconst NewMessage: React.FC<NewMessageType> = ({addMessage}) => {\n\n    const onSubmit = (formData: FormDataType) => {\n        console.log(formData.text);\n        addMessage(formData.text);\n    };\n\n    return <NewMessageReduxForm onSubmit={onSubmit}/>\n}\n\nexport default NewMessage;","import React from \"react\";\nimport styles from './Dialogs.module.css';\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport NewMessage from \"./NewMessage/NewMessageForm\";\nimport {DialogPageType} from \"../../types/types\";\n\ntype DialogsPropsType = {\n    dialogsPage: DialogPageType,\n    addMessage: (text: string) => void\n}\n\nconst Dialogs: React.FC<DialogsPropsType> = ({\n                                                 dialogsPage,\n                                                 addMessage\n                                             }) => {\n\n    const {dialogData, messagesData} = dialogsPage;\n\n    //arrays of components\n    const dialogsElements = dialogData.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>);\n\n    const messagesElements = messagesData.map(messageItem => <Message key={messageItem.id}\n                                                                      message={messageItem.message}/>);\n\n    return (\n        <div className={styles.dialogs}>\n            <div className={styles.dialogsBlock}>\n\n                {dialogsElements}\n\n            </div>\n            <div className={styles.messagesBlock}>\n\n                {messagesElements}\n\n                <NewMessage addMessage={addMessage}/>\n            </div>\n        </div>\n    )\n};\n\nexport default Dialogs;","import React from \"react\";\nimport {dialogsActions} from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport WithAuthRedirect from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\nimport {RootState} from \"../../redux/redux-store\";\n\n\nconst mapStateToProps = (state: RootState) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        isAuth: state.auth.isAuth\n    }\n};\n\nconst DialogsContainer = compose<React.ComponentType>(\n    WithAuthRedirect,\n    connect(mapStateToProps, {addMessage: dialogsActions.addMessage})\n)(Dialogs);\n\nexport default DialogsContainer;"],"names":["_ref","message","_jsx","className","styles","children","id","name","path","concat","NavLink","to","NewMessageReduxForm","reduxForm","form","handleSubmit","_jsxs","onSubmit","Field","component","Textarea","type","placeholder","validate","requiredField","src","alt","_ref2","addMessage","formData","console","log","text","dialogsPage","dialogData","messagesData","dialogsElements","map","dialog","DialogItem","messagesElements","messageItem","Message","NewMessage","compose","WithAuthRedirect","connect","state","isAuth","auth","dialogsActions","Dialogs"],"sourceRoot":""}