{"version":3,"file":"static/js/656.a62fcb35.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.tsx","webpack://my-app/./src/components/Dialogs/NewMessage/NewMessage.module.css?5d76","components/Dialogs/NewMessage/NewMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsBlock\":\"Dialogs_dialogsBlock__qBg+B\",\"messagesBlock\":\"Dialogs_messagesBlock__IpKzJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__rjHQQ\"};","import React from 'react';\nimport styles from './Message.module.css';\nimport { MessageType } from '../../../types/types';\n\nconst Message: React.FC<MessageType> = ({ message }) => {\n  return (\n    <div className={styles.message}>\n      <div>{message}</div>\n    </div>\n  );\n};\n\nexport default Message;\n","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"DialogItem_active__wvgh9\",\"dialog\":\"DialogItem_dialog__gU34-\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './DialogItem.module.css';\nimport { DialogType } from '../../../types/types';\n\nconst DialogItem: React.FC<DialogType> = ({ id, name }) => {\n  const path = `/dialogs/${id}`;\n\n  return (\n    <div className={styles.dialog}>\n      <NavLink to={path}>{name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"createNewMessageBlock\":\"NewMessage_createNewMessageBlock__yBNou\",\"textareaBlock\":\"NewMessage_textareaBlock__QZoZS\",\"btnBlock\":\"NewMessage_btnBlock__5xoHr\"};","import React from 'react';\nimport styles from './NewMessage.module.css';\nimport sendImg from './../../../img/paper-plane-1.png';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport { requiredField } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst NEW_MESSAGE = 'newMessage';\n\n//object = some props for the component\n\nconst NewMessageForm: React.FC<\n  InjectedFormProps<FormDataType, object> & object\n> = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit} className={styles.createNewMessageBlock}>\n      <div className={styles.textareaBlock}>\n        <Field\n          component={Textarea}\n          name={'newMessage'}\n          type={'text'}\n          placeholder={'New message'}\n          validate={requiredField}\n        />\n      </div>\n      <div className={styles.btnBlock}>\n        <button>\n          <img src={sendImg} alt={'sendIMG'} />\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst NewMessageReduxForm = reduxForm<FormDataType>({ form: NEW_MESSAGE })(\n  NewMessageForm\n);\n\ntype FormDataType = {\n  text: string;\n};\ntype FormDataTypeKeys = Extract<keyof FormDataType, string>;\n\ntype NewMessageType = {\n  addMessage: (data: string) => void;\n};\n\nconst NewMessage: React.FC<NewMessageType> = ({ addMessage }) => {\n  const onSubmit = (formData: FormDataType) => {\n    console.log(formData.text);\n    addMessage(formData.text);\n  };\n\n  return <NewMessageReduxForm onSubmit={onSubmit} />;\n};\n\nexport default NewMessage;\n","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport NewMessage from './NewMessage/NewMessageForm';\nimport { DialogPageType } from '../../types/types';\n\ntype DialogsPropsType = {\n  dialogsPage: DialogPageType;\n  addMessage: (text: string) => void;\n};\n\nconst Dialogs: React.FC<DialogsPropsType> = ({ dialogsPage, addMessage }) => {\n  const { dialogData, messagesData } = dialogsPage;\n\n  //arrays of components\n  const dialogsElements = dialogData.map((dialog) => (\n    <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} />\n  ));\n\n  const messagesElements = messagesData.map((messageItem) => (\n    <Message key={messageItem.id} message={messageItem.message} />\n  ));\n\n  return (\n    <div className={styles.dialogs}>\n      <div className={styles.dialogsBlock}>{dialogsElements}</div>\n      <div className={styles.messagesBlock}>\n        {messagesElements}\n\n        <NewMessage addMessage={addMessage} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nexport function WithAuthRedirect(WrappedComponent) {\n  const RedirectComponent = (props) => {\n    const { isAuth, ...restProps } = props;\n\n    if (!isAuth) return <Navigate to={'/login'} />;\n\n    return <WrappedComponent {...restProps} />;\n  };\n\n  return connect(mapStateToPropsForRedirect)(RedirectComponent);\n}\n\nexport default WithAuthRedirect;\n","import React from 'react';\nimport { dialogsActions } from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport WithAuthRedirect from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\nimport { RootState } from '../../redux/redux-store';\n\nconst mapStateToProps = (state: RootState) => {\n  return {\n    dialogsPage: state.dialogsPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nconst DialogsContainer = compose<React.ComponentType>(\n  WithAuthRedirect,\n  connect(mapStateToProps, { addMessage: dialogsActions.addMessage })\n)(Dialogs);\n\nexport default DialogsContainer;\n"],"names":["_ref","message","_jsx","className","styles","children","id","name","path","concat","NavLink","to","NewMessageReduxForm","reduxForm","form","handleSubmit","_jsxs","onSubmit","Field","component","Textarea","type","placeholder","validate","requiredField","src","alt","_ref2","addMessage","formData","console","log","text","dialogsPage","dialogData","messagesData","dialogsElements","map","dialog","DialogItem","messagesElements","messageItem","Message","NewMessage","mapStateToPropsForRedirect","state","isAuth","auth","WrappedComponent","connect","props","restProps","_objectWithoutProperties","_excluded","_objectSpread","Navigate","compose","WithAuthRedirect","dialogsActions","Dialogs"],"sourceRoot":""}